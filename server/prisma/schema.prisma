generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organizations {
  id              String   @id @default(uuid())
  responsibleName String   @map("responsible_name")
  email           String   @unique
  zipCode         String   @map("zip_code")
  address         String
  whatsapp        String
  passwordHash    String   @map("password_hash")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @map("updated_at")

  pets Pets[]

  @@map("organizations")
}

enum LifeStage {
  PUPPY
  ADULT
  SENIOR
}

enum PetType {
  DOG
  CAT
  OTHER
}

enum IdealEnvironment {
  SPACIOUS
  SMALL
  INDOOR
  OUTDOOR
  WITH_YARD
  APARTMENT
}

enum PetSize {
  SMALL
  MEDIUM
  BIG
}

enum PetEnergyLevel {
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

enum PetIndependenceLevel {
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

model Pets {
  id                String                 @id @default(uuid())
  name              String
  about             String?                @db.VarChar(300)
  lifeStage         LifeStage              @map("life_stage")
  type              PetType
  size              PetSize
  energyLevel       PetEnergyLevel         @map("energy_level")
  independenceLevel PetIndependenceLevel   @map("independence_level")
  idealEnvironment  IdealEnvironment       @map("ideal_environment")
  isAdopted         Boolean                @map("is_adopted")
  createdAt         DateTime               @default(now()) @map("created_at")
  updatedAt         DateTime               @default(now()) @map("updated_at")
  orgId             String                 @map("org_id")
  org               Organizations          @relation(fields: [orgId], references: [id])
  photos            PetPhotos[]
  requirements      AdoptionRequirements[]

  @@map("pets")
}

model PetPhotos {
  id       String @id @default(uuid())
  imageUrl String @map("image_url")
  petId    String @map("pet_id")
  pet      Pets   @relation(fields: [petId], references: [id])

  @@map("pet_photos")
}

model AdoptionRequirements {
  id          Int    @id @default(autoincrement())
  description String
  petId       String @map("pet_id")
  pet         Pets   @relation(fields: [petId], references: [id])

  @@map("adoption_requirements")
}
